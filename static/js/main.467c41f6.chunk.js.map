{"version":3,"sources":["Title.tsx","UploadFiles.tsx","HelpText.tsx","FilePreview.tsx","App.tsx","index.tsx"],"names":["Title","content","style","fontFamily","color","fontSize","letterSpacing","fontWeight","textAlign","marginTop","marginBottom","UploadFiles","setFiles","htmlFor","padding","border","borderRadius","transitionDuration","id","type","multiple","accept","display","onChange","e","currentTarget","files","HelpText","FilePreview","handleSubmit","length","listStylePosition","marginLeft","Array","from","map","file","margin","name","backgroundColor","textDecoration","onClick","App","useState","i","minRows","Number","MAX_VALUE","parsedFiles","parseNextFile","Papa","dynamicTyping","skipEmptyLines","complete","res","Math","min","data","push","error","window","alert","numRows","csvObj","currRow","j","b","c","d","calcVal","blob","Blob","filename","Date","toLocaleDateString","navigator","msSaveBlob","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","visibility","body","appendChild","click","removeChild","makeCSV","ReactDOM","render","StrictMode","getElementById"],"mappings":"sLAMe,SAASA,EAAT,GAAkD,IAAjCC,EAAgC,EAAhCA,QAC9B,OACE,mBACEC,MAAO,CACLC,WAAY,0BACZC,MAAO,UACPC,SAAU,MACVC,cAAe,UACfC,WAAY,SACZC,UAAW,SACXC,UAAW,IACXC,aAAc,OATlB,SAYGT,I,KCbQ,SAASU,EAAT,GAAyD,IAAlCC,EAAiC,EAAjCA,SACpC,OACE,sBACEV,MAAO,CACLM,UAAW,UAFf,UAKI,uBACEK,QAAQ,aACRX,MAAO,CACLG,SAAU,MACVE,WAAY,SACZO,QAAS,QACTC,OAAQ,uBACRC,aAAc,QACdC,mBAAoB,QAEtBC,GAAG,eAVL,0BAeF,uBACEA,GAAG,aACHC,KAAK,OACLC,UAAQ,EACRC,OAAO,OACPnB,MAAO,CAAEoB,QAAS,QAClBC,SAAU,SAACC,GAAD,OAAOZ,EAASY,EAAEC,cAAcC,aChCnC,SAASC,IACpB,OACI,qBACAzB,MAAO,CACHM,UAAW,SACXC,UAAW,OAHf,8DAMiD,uBANjD,sCAO8B,uBAP9B,yCCIO,SAASmB,EAAT,GAAoE,IAA7CF,EAA4C,EAA5CA,MAAOG,EAAqC,EAArCA,aAC3C,OACE,sBAAK3B,MAAO,CAAEM,UAAW,SAAUC,UAAW,OAA9C,YACKiB,GAAUA,GAA0B,IAAjBA,EAAMI,SAAkB,cAACH,EAAD,IAC7CD,GAASA,EAAMI,OAAS,GACvB,oBAAI5B,MAAO,CAAE6B,kBAAmB,SAAUC,WAAY,QAAtD,SACGC,MAAMC,KAAKR,GAAOS,KAAI,SAACC,GAAD,OACrB,oBAAoBlC,MAAO,CAAEmC,OAAQ,OAArC,SACGD,EAAKE,MADCF,EAAKE,WAMnBZ,GAASA,EAAMI,OAAS,GACvB,wBACE5B,MAAO,CACLC,WAAY,0BACZC,MAAO,UACPmC,gBAAiB,UACjBlC,SAAU,MACVE,WAAY,OACZiC,eAAgB,OAChBzB,OAAQ,OACRC,aAAc,QACdC,mBAAoB,QAEtBC,GAAG,eACHuB,QAASZ,EAbX,uB,WCjBO,SAASa,IACtB,MAA0BC,mBAA0B,MAApD,mBAAOjB,EAAP,KAAcd,EAAd,KA2DA,OACE,sBACEV,MAAO,CACLC,WAAY,0BACZC,MAAO,UACPM,aAAc,QAJlB,UAOE,cAACV,EAAD,CAAOC,QAAQ,oBACf,cAACU,EAAD,CAAaC,SAAUA,IACvB,cAACgB,EAAD,CAAaF,MAAOA,EAAOG,aApCV,WACnB,IAAIe,EAAI,EACJC,EAAUC,OAAOC,UACfC,EAAyB,IACT,SAAhBC,IACJ,IAAIb,EAAOV,EAAOI,SAAWc,EAAI,KAAOlB,EAAOkB,KAC3CR,EACFc,QAAWd,EAAM,CACfe,eAAe,EACfC,gBAAgB,EAChBC,SAAU,SAACC,GACTT,EAAUU,KAAKC,IAAIX,EAASS,EAAIG,KAAK3B,QACrCkB,EAAYU,KAAKJ,EAAIG,MACrBR,KAEFU,MAAO,WACLC,OAAOC,MAAM,8CA/CP,SAACb,EAAoBc,GAEnC,IADA,IAAMC,EAAmB,GAChBnB,EAAI,EAAGA,EAAIkB,EAASlB,IAAK,CAEhC,IADA,IAAIoB,EAAU,GACLC,EAAI,EAAGA,EAAIjB,EAAYlB,OAAS,EAAGmC,IAAK,CAC/C,kBAAoBjB,EAAYiB,EAAI,GAAGrB,GAAvC,GAASsB,EAAT,KAAYC,EAAZ,KAAeC,EAAf,KACMC,GAAWH,EAAIE,IAAMD,EAAIC,GAC/BJ,EAAO,2BAAQA,GAAR,kBAAkBC,EAAII,IAE/BN,EAAOL,KAAKM,GAEd,IAAMM,EAAO,IAAIC,KAAK,CAACrB,UAAaa,KAE9BS,EAAW,iBADJ,IAAIC,MACuBC,qBAAuB,OAC/D,GAAIC,UAAUC,WACZD,UAAUC,WAAWN,OAChB,CACL,IAAIO,EAAOC,SAASC,cAAc,KAClC,QAAsBC,IAAlBH,EAAKI,SAAwB,CAC/B,IAAIC,EAAMC,IAAIC,gBAAgBd,GAC9BO,EAAKQ,aAAa,OAAQH,GAC1BL,EAAKQ,aAAa,WAAYb,GAC9BK,EAAK3E,MAAMoF,WAAa,SACxBR,SAASS,KAAKC,YAAYX,GAC1BA,EAAKY,QACLX,SAASS,KAAKG,YAAYb,IAG9BjE,EAAS,MAuBL+E,CAAQ3C,EAAaH,GAGzBI,SC3DJ2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpD,EAAD,MAEFoC,SAASiB,eAAe,U","file":"static/js/main.467c41f6.chunk.js","sourcesContent":["import { ReactElement } from \"react\";\n\ninterface Props {\n  content: string;\n}\n\nexport default function Title({ content }: Props): ReactElement {\n  return (\n    <p\n      style={{\n        fontFamily: \"'Open Sans', sans-serif\",\n        color: \"#E7ECEF\",\n        fontSize: \"5em\",\n        letterSpacing: \"-0.02em\",\n        fontWeight: \"bolder\",\n        textAlign: \"center\",\n        marginTop: \"0\",\n        marginBottom: \"2em\"\n      }}\n    >\n      {content}\n    </p>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport \"./buttons.css\"\n\ninterface Props {\n  setFiles: React.Dispatch<React.SetStateAction<FileList | null>>;\n}\n\nexport default function UploadFiles({ setFiles }: Props): ReactElement {\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n      }}\n    >\n        <label\n          htmlFor=\"fileUpload\"\n          style={{\n            fontSize: \"4em\",\n            fontWeight: \"bolder\",\n            padding: \"0.2em\",\n            border: \"0.08em solid #E7ECEF\",\n            borderRadius: \"0.3em\",\n            transitionDuration: \"0.4s\",\n          }}\n          id=\"uploadButton\"\n        >\n          Upload Files\n        </label>\n\n      <input\n        id=\"fileUpload\"\n        type=\"file\"\n        multiple\n        accept=\".csv\"\n        style={{ display: \"none\" }}\n        onChange={(e) => setFiles(e.currentTarget.files)}\n      ></input>\n    </div>\n  );\n}\n","import { ReactElement } from 'react'\n\n\nexport default function HelpText(): ReactElement {\n    return (\n        <h2\n        style={{\n            textAlign: \"center\",\n            marginTop: \"2em\"\n        }}\n      >\n        Please upload your csv files one group at a time.<br/>\n        ✅ (A1.csv, A2.csv, A3.csv ...)<br/>\n        ❌ (A1.csv, A2.csv, B1.csv ...)\n      </h2>\n    )\n}\n","import { ReactElement } from \"react\";\nimport \"./buttons.css\"\nimport HelpText from \"./HelpText\";\n\ninterface Props {\n  files: FileList | null;\n  handleSubmit: () => void;\n}\n\nexport default function FilePreview({ files, handleSubmit }: Props): ReactElement {\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"3em\" }}>\n      {(!files || (files && files.length === 0)) && <HelpText />}\n      {files && files.length > 0 && (\n        <ol style={{ listStylePosition: \"inside\", marginLeft: \"-2em\" }}>\n          {Array.from(files).map((file) => (\n            <li key={file.name} style={{ margin: \"1em\" }}>\n              {file.name}\n            </li>\n          ))}\n        </ol>\n      )}\n      {files && files.length > 0 && (\n        <button\n          style={{\n            fontFamily: \"'Open Sans', sans-serif\",\n            color: \"#0F7173\",\n            backgroundColor: \"#E7ECEF\",\n            fontSize: \"2em\",\n            fontWeight: \"bold\",\n            textDecoration: \"none\",\n            border: \"none\",\n            borderRadius: \"0.2em\",\n            transitionDuration: \"0.4s\"\n          }}\n          id=\"submitButton\"\n          onClick={handleSubmit}\n        >\n          Submit\n        </button>\n      )}\n    </div>\n  );\n}\n","import { ReactElement, useState } from \"react\";\nimport Title from \"./Title\";\nimport UploadFiles from \"./UploadFiles\";\nimport FilePreview from \"./FilePreview\";\nimport * as Papa from \"papaparse\";\n\nexport default function App(): ReactElement {\n  const [files, setFiles] = useState<FileList | null>(null);\n\n  const makeCSV = (parsedFiles: any[], numRows: number) => {\n    const csvObj: object[] = [];\n    for (var i = 1; i < numRows; i++) {\n      let currRow = {};\n      for (var j = 1; j < parsedFiles.length + 1; j++) {\n        const [, b, c, d] = parsedFiles[j - 1][i];\n        const calcVal = (b - d) / (c - d);\n        currRow = { ...currRow, [j]: calcVal };\n      }\n      csvObj.push(currRow);\n    }\n    const blob = new Blob([Papa.unparse(csvObj)]);\n    const date = new Date();\n    const filename = \"MergedResults\" + date.toLocaleDateString() + \".csv\";\n    if (navigator.msSaveBlob) {\n      navigator.msSaveBlob(blob);\n    } else {\n      var link = document.createElement(\"a\");\n      if (link.download !== undefined) {\n        var url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", filename);\n        link.style.visibility = \"hidden\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n    setFiles(null);\n  };\n\n  const handleSubmit = () => {\n    let i = 0;\n    let minRows = Number.MAX_VALUE;\n    const parsedFiles: unknown[] = [];\n    const parseNextFile = () => {\n      let file = files!.length === i ? null : files![i++];\n      if (file) {\n        Papa.parse(file, {\n          dynamicTyping: true,\n          skipEmptyLines: true,\n          complete: (res) => {\n            minRows = Math.min(minRows, res.data.length);\n            parsedFiles.push(res.data);\n            parseNextFile();\n          },\n          error: () => {\n            window.alert(\"Something went wrong, Please try again.\");\n          },\n        });\n      } else {\n        makeCSV(parsedFiles, minRows);\n      }\n    };\n    parseNextFile();\n  };\n\n  return (\n    <div\n      style={{\n        fontFamily: \"'Open Sans', sans-serif\",\n        color: \"#E7ECEF\",\n        marginBottom: \"50px\",\n      }}\n    >\n      <Title content=\"FRAP CSV Helper\" />\n      <UploadFiles setFiles={setFiles} />\n      <FilePreview files={files} handleSubmit={handleSubmit} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}